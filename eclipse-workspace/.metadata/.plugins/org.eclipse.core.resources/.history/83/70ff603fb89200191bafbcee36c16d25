package com.revature.arrays;

public class ArraysDemo {

			//Create a 2D array of ints
			static int[][] arr1 = new int[10][20];
			
			//really creating an array of arrays
			
			static int[][] arr2 = {{1,2,3},{4,5,6}};
			static int[][] arrUnsorted = {{52,7,21},{36,2,99}};
			static int num = 0;
			
	public static void main(String[] args) {
		
		
		for (int i = 0; i < arr2.length; i++) {
			for (int j = 0; j < arr2[i].length; j++) { //iterating over the columns in a row
				System.out.println("i = " + i);
				System.out.println("j = " + j);
				System.out.println("arr2[i][j] = " + arr2[i][j]);
			}
		}
		System.out.println("The largest number in the array is " + largestElement(arr2));
		System.out.println("The sum of all numbers in the array is " + sumElement(arr2));
		sortArray(arrUnsorted);
		for (int i = 0; i < sortArray(arrUnsorted).length; i++) {
			for (int j = 0; j < sortArray(arrUnsorted)[i].length; j++) { //iterating over the columns in a row
				System.out.println("i = " + i);
				System.out.println("j = " + j);
				System.out.println("arr[i][j] = " + sortArray(arrUnsorted)[i][j]);
			}
		}
		
		
	}
	/*
	 * Returns the largest element in the provided array
	 * 
	 */
	public static int largestElement(int[][] arr) {
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) { 
				if(arr[i][j] > num) {
					num = arr[i][j];
				}
			}
		}
		return num;
	}
	/*
	 * Returns the sum of all elements in the provided array
	 * 
	 */
	public static int sumElement(int[][] arr) {
		num = 0;
		for (int i = 0; i < arr.length; i++) {
			for (int j = 0; j < arr[i].length; j++) { 
					num = num + arr[i][j];
			}
		}
		return num;
	}
	/*
	 * Returns all elements sorted in the provided array
	 * 
	 */
	public static int[][] sortArray(int[][] arr) {
		
		
		boolean check = false;
		
		while (check == false) {
			
			
			
			for (int i = 0; i < arr.length; i++) {
				for (int j = 0; j < arr[i].length-1; j++) { 
						if (arr[i][j]>arr[i][j+1]) {
							int temp1 = arr[i][j];
							int temp2 = arr[i][j+1];
							arr[i][j] = temp2;
							arr[i][j+1] = temp1;
						}
				}
			}
			
			for (int i = 0; i < arr.length-1; i++) {
				for (int j = 0; j < arr[i].length-1; j++) { 
						if (arr[i+1][j]>arr[i][j+1]) {
							int temp1 = arr[i][j];
							int temp2 = arr[i][j+1];
							arr[i][j] = temp2;
							arr[i][j+1] = temp1;
						}
				}
			}
			
			for (int i = 0; i < arr.length; i++) {
				for (int j = 0; j < arr[i].length-1-i; j++) { 
						if (arr[i][j]>arr[i][j+1]) {
							check = false;
							break;
						}else {
							check = true;
						}
				}
			}
			
			
			
			
			
			
		}
		return arr;
	}
}
